generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(uuid())
  email                String    @unique
  name                 String?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  ownedSessions        Session[] @relation("SessionOwner")
  collaboratedSessions Session[] @relation("SessionCollaborators")
}

model Session {
  id            String     @id @default(uuid())
  title         String
  description   String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  owner         User       @relation("SessionOwner", fields: [ownerId], references: [id])
  ownerId       String
  collaborators User[]     @relation("SessionCollaborators")
  ideas         Idea[]
  categories    Category[]
  isPublic      Boolean    @default(false)
}

model Idea {
  id            String    @id @default(uuid())
  content       String
  position      String // JSON string of {x: number, y: number}
  isAiGenerated Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  session       Session   @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId     String
  category      Category? @relation(fields: [categoryId], references: [id])
  categoryId    String?
}

model Category {
  id        String   @id @default(uuid())
  name      String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId String
  ideas     Idea[]
}
